
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: 'bitnami/kafka:latest'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - kafka-spark-net

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: sparkuser
      POSTGRES_PASSWORD: sparkpass
      POSTGRES_DB: covid_data
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  spark-master:
    image: bitnami/spark:3.4.1
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - kafka-spark-net

  spark-worker-1:
    image: bitnami/spark:3.4.1
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8081:8081"
    networks:
      - kafka-spark-net

  spark-worker-2:
    image: bitnami/spark:3.4.1
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8082:8081"
    networks:
      - kafka-spark-net

  spark-worker-3:
    image: bitnami/spark:3.4.1
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8083:8081"
    networks:
      - kafka-spark-net

  spark-client:
    image: bitnami/spark:3.4.1
    depends_on:
      - spark-master
      - kafka
    environment:
      - SPARK_MODE=client
    entrypoint: [ "sleep", "infinity" ]
    volumes:
      - ./app:/app
      - ./spark-checkpoints:/app/checkpoints 
    networks:
      - kafka-spark-net
volumes:
  kafka-data:
  pgdata:

networks:
  kafka-spark-net: